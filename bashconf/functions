#!/usr/bin/bash

# vim:fileencoding=utf-8:foldmethod=marker

# functions for bashrc
#
# author: RilCritch

# show the list of packages that need this package - depends mpv as example
depends () {
	search=$(echo "$1")
	sudo pacman -Sii $search | grep "Required" | sed -e "s/Required By     : //g" | sed -e "s/  /\n/g"
}

# navigation moving up directories
up () {
  local d=""
  local limit="$1"

  # Default to limit of 1
  if [ -z "$limit" ] || [ "$limit" -le 0 ]; then
    limit=1
  fi

  for ((i=1;i<=limit;i++)); do
    d="../$d"
  done

  # perform cd. Show error if cd fails
  if ! cd "$d"; then
    echo "Couldn't go up $limit dirs.";
  fi
}

# EXtractor for all kinds of archives
# usage: ex <file>
ex () {
	if [ -f $1 ]; then
		case $1 in
      *.tar.bz2) tar xf $1 ;;
      *.tar.gz) tar xzf $1 ;;
      *.bz2) bunzip2 $1 ;;
      *.rar) unrar x $1 ;;
      *.gz) gunzip $1 ;;
      *.tar) tar xf $1 ;;
      *.tbz2) tar xf $1 ;;
      *.tgz) tar xzf $1 ;;
      *.zip) unzip $1 ;;
      *.Z) uncompress $1 ;;
      *.7z) 7z x $1 ;;
      *.deb) ar x $1 ;;
      *.tar.xz) tar xf $1 ;;
      *.tar.zst) tar xf $1 ;;
      *) echo "'$1' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

# get a color palette for an image
palette () {
  img=$1

  vimg $img

  # hex values
  ~/mydots/applications/okolors -k 10 -w 0.01 -n 3 -l 10,30,50,70 -s l $img

  # swatch
  ~/mydots/applications/okolors -k 10 -w 0.01 -n 3 -l 10,30,50,70 -s l -o swatch $img
}

# function for sourcing a python environment
pysrc () {
  envname=$1
  
  source $envname/bin/activate
}

# man page replacement
cman () {
  if [ -z "$1" ]; then
    echo "What manual page do you want?"
    echo "For example, try 'man man'."
  elif [ -n "$2" ]; then
    echo "Please enter only one program"
    echo "For example, try 'man man'."
  elif \man -w $1 >/dev/null 2>&1; then
    \man $1 | ccat --color="always" | less -R
  else
    echo "No manual entry for '$1'"
  fi
}

# fzf functions
# fast cd
cdf () {
  choice=$(find $HOME -type d | fzf --header-first --reverse --color=16 --prompt='▶ ' --pointer='󱦰' --preview 'exa --tree -la --icons -F -L=2 --group-directories-first --no-filesize --no-user --time-style='long-iso' {}')

  if [ -n "$choice" ]; then
    cd $choice
  fi
}

# pacman searching
pacf () {
  choice=$(pacman -Slq | fzf --header-first --reverse --color=16 --prompt='▶ ' --pointer='󱦰' --preview 'pacman -Si {}')

  if [ -n "$choice" ]; then
    echo "Installing $choice" | clr green
    sudo pacman -S $choice
  fi
}

# man page searching
manf () {
  choice=$(\man -k . | awk -F ' - ' '{print $1}' | fzf -q "$1" --prompt='Man Pages ▶ ' --pointer='󱦰' --header-first --reverse --color=16 --preview $'echo {} | tr -d \'()\' | awk \'{printf "%s ", $2} {print $1}\' | xargs -r man | ccat --color="always" | less -R' | tr -d ' ')

  if [ -n "$choice" ]; then
    \man $choice | ccat --color="always" | less -R
  fi
}
